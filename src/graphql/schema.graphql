# Operation
type Query {
  helloworld: String
  users: [User]!
  user(id: Int!): User
}

type Mutation {
  createUser(userInput: UserInput!): CreateUserPayload
  updateUser(userInput: UserInput!): UpdateUserPayload
  # deleteUser(userConfig: UserConfig): DeleteUserPayload
}

# Data Schema
type User {
  id: Int!
  name: String!
  age: Int!
}

# Payload Definition
union CreateUserPayload = CreateUserSuccess | ValidationError
union UpdateUserPayload = UpdateUserSuccess | ValidationError
union DeleteUserPayload = DeleteUserSuccess | ValidationError

# Return State Definition
type CreateUserSuccess {
  user: User
}

type UpdateUserSuccess {
  user: User
}

type DeleteUserSuccess {
  user: User
}

type ValidationError {
  message: String
}

# Mutation Parameters
input UserInput {
  id: Int!
  name: String!
  age: Int!
}
